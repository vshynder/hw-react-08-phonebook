{"version":3,"sources":["redux/actions.js","redux/operations/authOperations.js","components/UserMenu.js","redux/contacts-selectors.js","components/NavBar.js","components/Filter.js","components/ContactForm.js","components/ContactList.js","components/Alert.js","components/Loading.js","redux/operations/contactsOperations.js","screens/ContactsPage.js","screens/RegisterPage.js","screens/LoginPage.js","App.js","redux/reducers/contactReducer.js","redux/reducers/filterReducer.js","redux/reducers/mountedReducer.js","redux/reducers/alertShownReducer.js","redux/reducers/alertMessageReducer.js","redux/reducers/authReducers.js","redux/reducers/index.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logOutRequest","logOutSuccess","logOutError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","filter","value","payload","toggleMounted","toggleAlertVisibility","toggleAlertMessage","token","axios","defaults","headers","common","Authorization","registerUser","userData","dispatch","actions","name","email","password","post","then","response","data","catch","error","loginUser","logOutUser","connect","onExit","authOperations","onClick","state","isMounted","contacts","isAlertShown","alertMessage","isLoading","user","userName","selectors","props","className","to","Filter","id","onChange","filterChange","filterVal","ContactForm","number","handleChange","e","setState","target","handleSubmit","preventDefault","formSubmit","onSubmit","this","type","React","Component","ContactListItem","contactId","remove","ContactList","useEffect","localStorage","setItem","JSON","stringify","TransitionGroup","component","map","contact","CSSTransition","key","timeout","classNames","toLowerCase","includes","Alert","isShown","info","in","style","display","Loader","baseURL","get","delete","onFormSubmit","operations","removeContact","handleFilter","handleAlertChange","message","handleAlertVisibility","loadContacts","history","useHistory","replace","handleAlert","setTimeout","mountOnEnter","trim","find","length","onRegister","cred","useState","setName","setEmail","setPassword","console","log","onLogin","App","NavBar","path","contactReducer","createReducer","action","el","loading","filterReducer","mountedReducer","alertShownReducer","alertMessageReducer","authReducer","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"yRA4De,GACbA,gBA3DsBC,YAAa,oBA4DnCC,gBA3DsBD,YAAa,oBA4DnCE,cA3DoBF,YAAa,kBA6DjCG,aA3DmBH,YAAa,iBA4DhCI,aA3DmBJ,YAAa,iBA4DhCK,WA3DiBL,YAAa,eA6D9BM,cA3DoBN,YAAa,kBA4DjCO,cA3DoBP,YAAa,kBA4DjCQ,YA3DkBR,YAAa,gBA6D/BS,qBA3D2BT,YAAa,yBA4DxCU,qBA3D2BV,YAAa,yBA4DxCW,mBA3DyBX,YAAa,uBA6DtCY,kBA3DwBZ,YAAa,sBA4DrCa,kBA3DwBb,YAAa,sBA4DrCc,gBA3DsBd,YAAa,oBA6DnCe,qBA3D2Bf,YAAa,yBA4DxCgB,qBA3D2BhB,YAAa,yBA4DxCiB,mBA3DyBjB,YAAa,uBA6DtCkB,OA3DalB,YAAa,UAAU,SAACmB,GACrC,MAAO,CACLC,QAAS,CACPD,aAyDJE,cApDoBrB,YAAa,kBAAkB,SAACmB,GACpD,MAAO,CACLC,QAAS,CACPD,aAkDJG,sBA9C4BtB,YAC5B,2BACA,SAACmB,GACC,MAAO,CACLC,QAAS,CACPD,aA0CNI,mBApCyBvB,YAAa,wBAAwB,SAACmB,GAC/D,MAAO,CACLC,QAAS,CACPD,c,iBCpDAK,EAAQ,SACRA,GACFC,IAAMC,SAASC,QAAQC,OAAOC,cAA9B,iBAAwDL,IAFtDA,EAAQ,WAKVC,IAAMC,SAASC,QAAQC,OAAOC,cAAgB,IA4CnC,GACbC,aAzCmB,SAACC,GAAD,OAAc,SAACC,GAClCA,EAASC,EAAQlC,mBAD8B,IAGvCmC,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SAErBX,IACGY,KAAK,gBAAiB,CAAEH,OAAMC,QAAOC,aACrCE,MAAK,SAACC,GACLf,EAAUe,EAASC,KAAKhB,OACxBQ,EAASC,EAAQhC,gBAAgBsC,EAASC,UAE3CC,OAAM,SAACC,GAAD,OAAWV,EAASC,EAAQ/B,cAAcwC,SA+BnDC,UA5BgB,SAACZ,GAAD,OAAc,SAACC,GAC/BA,EAASC,EAAQ9B,gBAD2B,IAGpCgC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SAEfX,IACGY,KAAK,eAAgB,CAAEF,QAAOC,aAC9BE,MAAK,SAACC,GACLf,EAAUe,EAASC,KAAKhB,OACxBQ,EAASC,EAAQ7B,aAAamC,EAASC,UAExCC,OAAM,SAACC,GAAD,OAAWV,EAASC,EAAQ5B,WAAWqC,SAkBhDE,WAfiB,kBAAM,SAACZ,GACxBA,EAASC,EAAQ3B,iBAEjBmB,IACGY,KAAK,gBACLC,MAAK,SAACC,GACLf,IACAQ,EAASC,EAAQ1B,cAAcgC,EAASC,UAEzCC,OAAM,SAACC,GAAD,OAAWV,EAASC,EAAQzB,YAAYkC,UCpCpCG,kBAAQ,KAAM,CAAEC,OAAQC,EAAeH,YAAvCC,EARf,YAAqC,IAAjBX,EAAgB,EAAhBA,KAAMY,EAAU,EAAVA,OACxB,OACE,sCACSZ,EADT,IACe,4BAAQc,QAASF,GAAjB,Y,QCAJ,EARM,SAACG,GAAD,OAAWA,EAAMC,WAQvB,EAPK,SAACD,GAAD,OAAWA,EAAME,UAOtB,EANG,SAACF,GAAD,OAAWA,EAAM/B,QAMpB,EALO,SAAC+B,GAAD,OAAWA,EAAMG,cAKxB,EAJS,SAACH,GAAD,OAAWA,EAAMI,cAI1B,EAHG,SAACJ,GAAD,OAAWA,EAAMK,WAGpB,EAFK,SAACL,GAAD,OAAWA,EAAMM,KAAKrB,MCmB1C,IAIeW,eAJS,SAACI,GAAD,MAAY,CAClCO,SAAUC,EAAsBR,MAGnBJ,EArBf,SAAgBa,GACd,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,UACnC,0BAAMD,UAAU,eAAhB,WAEF,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,aACnC,0BAAMD,UAAU,eAAhB,cAEF,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,aACnC,0BAAMD,UAAU,eAAhB,cAEDD,EAAMF,UAAY,kBAAC,EAAD,CAAUtB,KAAMwB,EAAMF,e,OCGhCK,EAnBA,SAACH,GACd,OACE,yBAAKC,UAAU,UACb,uBAAGA,UAAU,iBAAb,yBACA,2BACEA,UAAU,gBACVG,GAAG,SACHC,SAAUL,EAAMM,aAChB7C,MAAOuC,EAAMO,c,OC0CNC,E,4MAjDbjB,MAAQ,CACNf,KAAM,GACNiC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOT,GAAKO,EAAEE,OAAOpD,S,EAI5BqD,aAAe,SAACH,GACdA,EAAEI,iBACF,EAAKf,MAAMgB,WAAW,EAAKzB,OAC3B,EAAKqB,SAAS,CACZpC,KAAM,GACNiC,OAAQ,M,uDAKV,OACE,0BAAMR,UAAU,OAAOgB,SAAUC,KAAKJ,cACpC,2BAAOb,UAAU,cAAjB,OAEE,2BACEA,UAAU,oBACVG,GAAG,OACHC,SAAUa,KAAKR,aACfS,KAAK,OACL1D,MAAOyD,KAAK3B,MAAMf,QAGtB,2BAAOyB,UAAU,gBAAjB,SAEE,2BACEA,UAAU,sBACVG,GAAG,SACHC,SAAUa,KAAKR,aACfS,KAAK,OACL1D,MAAOyD,KAAK3B,MAAMkB,UAGtB,4BAAQR,UAAU,gBAAlB,oB,GA5CkBmB,IAAMC,W,gBCgD1BC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAW/C,EAAd,EAAcA,KAAMiC,EAApB,EAAoBA,OAAQe,EAA5B,EAA4BA,OAA5B,OACtB,wBAAIvB,UAAU,sBACZ,yBAAKA,UAAU,4BACb,0BAAMA,UAAU,4BAA4BzB,GAC5C,0BAAMyB,UAAU,4BAA4BQ,IAG9C,4BACER,UAAU,uBACVX,QAAS,WACPkC,EAAOD,QASAE,EAhEK,SAACzB,GAKnB,OAJA0B,qBAAU,WACRC,aAAaC,QAJF,aAIkBC,KAAKC,UAAU9B,EAAMP,aACjD,CAACO,EAAMP,WAGR,kBAACsC,EAAA,EAAD,CAAiBC,UAAU,KAAK/B,UAAU,gBACtB,KAAjBD,EAAMxC,OACHwC,EAAMP,SAASwC,KAAI,SAACC,GAAD,OACjB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAQ9B,GACbiC,QAAS,IACTC,WAAW,sBAEX,kBAAC,EAAD,CACEf,UAAWW,EAAQ9B,GACnB5B,KAAM0D,EAAQ1D,KACdiC,OAAQyB,EAAQzB,OAChBe,OAAQxB,EAAMwB,aAIpBxB,EAAMP,SACHjC,QAAO,SAAC0E,GAAD,OACNA,EAAQ1D,KAAK+D,cAAcC,SAASxC,EAAMxC,OAAO+E,kBAElDN,KAAI,SAACC,GAAD,OACH,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAQ9B,GACbiC,QAAS,IACTC,WAAW,sBAEX,kBAAC,EAAD,CACEF,IAAKF,EAAQ9B,GACbmB,UAAWW,EAAQ9B,GACnB5B,KAAM0D,EAAQ1D,KACdiC,OAAQyB,EAAQzB,OAChBe,OAAQxB,EAAMwB,eC1BjBiB,EAbD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxB,OACE,kBAACR,EAAA,EAAD,CACEE,QAAS,IACTC,WAAW,QACXM,GAAIF,EACJG,MAAO,CAAEC,QAASJ,EAAU,QAAU,SAEtC,yBAAKzC,UAAU,SAAS0C,KCXf,SAASI,IACtB,OAAO,oDCAThF,IAAMC,SAASgF,QAAU,2CAEzB,IA6Be,EA7BO,kBAAM,SAAC1E,GAC3BA,EAASC,EAAQxB,wBAEjBgB,IACGkF,IAAI,aACJrE,MAAK,SAACC,GACLP,EAASC,EAAQvB,qBAAqB6B,EAASC,UAEhDC,OAAM,SAACC,GAAD,OAAWV,EAASC,EAAQtB,mBAAmB+B,SAqB3C,EAlBI,SAACkD,GAAD,OAAa,SAAC5D,GAC/BA,EAASC,EAAQrB,qBAEjBa,IACGY,KAAK,YAAauD,GAClBtD,MAAK,SAACC,GAAD,OAAcP,EAASC,EAAQpB,kBAAkB0B,EAASC,UAC/DC,OAAM,SAACC,GAAD,OAAWV,EAASC,EAAQnB,gBAAgB4B,SAYxC,EATO,SAACoB,GAAD,OAAQ,SAAC9B,GAC7BA,EAASC,EAAQlB,wBAEjBU,IACGmF,OADH,oBACuB9C,IACpBxB,MAAK,SAACC,GAAD,OAAcP,EAASC,EAAQjB,qBAAqB8C,OACzDrB,OAAM,SAACC,GAAD,OAAWV,EAASC,EAAQhB,mBAAmByB,SC4E3CG,eAzBS,SAACI,GAAD,MAAY,CAClCC,UAAWO,EAAuBR,GAClCE,SAAUM,EAAsBR,GAChC/B,OAAQuC,EAAoBR,GAC5BG,aAAcK,EAAwBR,GACtCI,aAAcI,EAA0BR,GACxCK,UAAWG,EAAoBR,GAC/BO,SAAUC,EAAsBR,OAGP,SAACjB,GAC1B,MAAO,CACL6E,aAAc,SAAC3E,EAAMiC,GAAP,OACZnC,EAAS8E,EAAsB,CAAE5E,OAAMiC,aACzC4C,cAAe,SAACjD,GAAD,OAAQ9B,EAAS8E,EAAyBhD,KACzDzC,cAAe,SAACF,GAAD,OAAWa,EAASC,EAAQZ,cAAcF,KACzD6F,aAAc,SAAC3C,GAAD,OAAOrC,EAASC,EAAQf,OAAOmD,EAAEE,OAAOpD,SACtD8F,kBAAmB,SAACC,GAAD,OACjBlF,EAASC,EAAQV,mBAAmB2F,KACtCC,sBAAuB,SAAChG,GAAD,OACrBa,EAASC,EAAQX,sBAAsBH,KACzCiG,aAAc,kBAAMpF,EAAS8E,SAIlBjE,EA3FE,SAACa,GAChB,IAAM2D,EAAUC,cAChBlC,qBAAU,WACH1B,EAAMF,UAKXE,EAAM0D,eACN1D,EAAMrC,eAAc,IALlBgG,EAAQE,QAAQ,YAOjB,IAEHnC,qBAAU,WACH1B,EAAMF,UACT6D,EAAQE,QAAQ,YAIjB,CAAC7D,EAAMF,WAEV,IAWMgE,EAAc,SAACN,GACnBxD,EAAMuD,kBAAkBC,GACxBxD,EAAMyD,uBAAsB,GAC5BM,YAAW,WACT/D,EAAMyD,uBAAsB,KAC3B,MAGL,OACE,yBAAKxD,UAAU,aACb,kBAACkC,EAAA,EAAD,CACES,GAAI5C,EAAMR,UACV6C,QAAS,IACTC,WAAW,QACX0B,cAAY,GAEZ,wBAAI/D,UAAU,SAAd,cAEF,kBAAC,EAAD,CAAae,WA7BI,SAAC,GAAsB,IAApBxC,EAAmB,EAAnBA,KAAMiC,EAAa,EAAbA,OACR,KAAhBjC,EAAKyF,QAAmC,KAAlBxD,EAAOwD,OAInBjE,EAAMP,SAASyE,MAAK,SAAChC,GAAD,OAAaA,EAAQ1D,OAASA,KAE5DsF,EAAY,oBAAsBtF,GAClCwB,EAAMmD,aAAa3E,EAAMiC,GAN3BqD,EAAY,wCA4BX9D,EAAMP,SAAS0E,OAAS,EACvB,kBAAC,EAAD,CAAQ7D,aAAcN,EAAMsD,aAAc/C,UAAWP,EAAMxC,SACzD,KAEHwC,EAAMJ,WAAa,kBAACmD,EAAD,MACpB,kBAAC,EAAD,CACEvF,OAAQwC,EAAMxC,OACdiC,SAAUO,EAAMP,SAChB+B,OAAQxB,EAAMqD,gBAEhB,kBAAC,EAAD,CAAOX,QAAS1C,EAAMN,aAAciD,KAAM3C,EAAML,mB,QC5BtD,IAIeR,cAAQ,MAJI,SAACb,GAAD,MAAe,CACxC8F,WAAY,SAACC,GAAD,OAAU/F,EAASe,EAAejB,aAAaiG,QAG9ClF,EAhDf,SAAsBa,GAAQ,IAAD,EACHsE,mBAAS,IADN,mBACpB9F,EADoB,KACd+F,EADc,OAEDD,mBAAS,IAFR,mBAEpB7F,EAFoB,KAEb+F,EAFa,OAGKF,mBAAS,IAHd,mBAGpB5F,EAHoB,KAGV+F,EAHU,KAU3B,OACE,0BAAMxD,SANa,SAACN,GACpBA,EAAEI,iBACF2D,QAAQC,IAAInG,EAAMC,EAAOC,GACzBsB,EAAMoE,WAAW,CAAE5F,OAAMC,QAAOC,eAI9B,wCAEE,2BACEyC,KAAK,OACL3C,KAAK,OACLf,MAAOe,EACP6B,SAAU,SAACM,GAAD,OAAO4D,EAAQ5D,EAAEE,OAAOpD,WAGtC,wCAEE,2BACE0D,KAAK,QACL3C,KAAK,QACLf,MAAOgB,EACP4B,SAAU,SAACM,GAAD,OAAO6D,EAAS7D,EAAEE,OAAOpD,WAGvC,2CAEE,2BACE0D,KAAK,WACL3C,KAAK,WACLf,MAAOiB,EACP2B,SAAU,SAACM,GAAD,OAAO8D,EAAY9D,EAAEE,OAAOpD,WAG1C,4BAAQ0D,KAAK,UAAb,gBCNN,I,MAIehC,cAAQ,MAJI,SAACb,GAAD,MAAe,CACxCsG,QAAS,SAACP,GAAD,OAAU/F,EAASe,EAAeJ,UAAUoF,QAGxClF,EArCf,SAAmBa,GAAQ,IAAD,EACEsE,mBAAS,IADX,mBACjB7F,EADiB,KACV+F,EADU,OAEQF,mBAAS,IAFjB,mBAEjB5F,EAFiB,KAEP+F,EAFO,KAQxB,OACE,0BAAMxD,SALa,SAACN,GACpBA,EAAEI,iBACFf,EAAM4E,QAAQ,CAAEnG,QAAOC,eAIrB,wCAEE,2BACEyC,KAAK,QACL3C,KAAK,QACLf,MAAOgB,EACP4B,SAAU,SAACM,GAAD,OAAO6D,EAAS7D,EAAEE,OAAOpD,WAGvC,2CAEE,2BACE0D,KAAK,WACL3C,KAAK,WACLf,MAAOiB,EACP2B,SAAU,SAACM,GAAD,OAAO8D,EAAY9D,EAAEE,OAAOpD,WAG1C,4BAAQ0D,KAAK,UAAb,aCGS0D,G,6KAtBX,OACE,kBAAC,IAAD,KACE,kBAACC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,IAAD,CAAU7E,GAAG,kB,GAhBPkB,IAAMC,Y,eCTX2D,EAAiBC,YAAc,IAAD,mBACxC1G,EAAQvB,sBAAuB,SAACuC,EAAO2F,GAAR,OAAmBA,EAAOxH,WADjB,cAGxCa,EAAQpB,mBAAoB,SAACoC,EAAO2F,GAAR,4BAAuB3F,GAAvB,CAA8B2F,EAAOxH,aAHzB,cAKxCa,EAAQjB,sBAAuB,SAACiC,EAAO2F,GAAR,OAC9B3F,EAAM/B,QAAO,SAAC2H,GAAD,OAAQA,EAAG/E,KAAO8E,EAAOxH,cANC,IAS9B0H,EAAUH,aAAc,GAAD,mBACjC1G,EAAQxB,sBAAuB,kBAAM,KADJ,cAEjCwB,EAAQvB,sBAAuB,kBAAM,KAFJ,cAGjCuB,EAAQtB,oBAAqB,kBAAM,KAHF,ICTvBoI,GAAgBJ,YAAc,GAAD,eACvC1G,EAAQf,QAAS,SAAC+B,EAAO2F,GAAR,OAAmBA,EAAOxH,QAAQD,UCDzC6H,GAAiBL,aAAc,EAAD,eACxC1G,EAAQZ,eAAgB,SAAC4B,EAAO2F,GAAR,OAAmBA,EAAOxH,QAAQD,UCDhD8H,GAAoBN,aAAc,EAAD,eAC3C1G,EAAQX,uBAAwB,SAAC2B,EAAO2F,GAAR,OAAmBA,EAAOxH,QAAQD,UCDxD+H,GAAsBP,YAAc,GAAD,eAC7C1G,EAAQV,oBAAqB,SAAC0B,EAAO2F,GAAR,OAAmBA,EAAOxH,QAAQD,UCCrDgI,GAAcR,YAFN,CAAEzG,KAAM,KAAMC,MAAO,KAAMX,MAAO,OAEf,iBAAC,EACtCS,EAAQhC,iBAAkB,SAACgD,EAAO2F,GAAR,MAAoB,CAC7C1G,KAAM0G,EAAOxH,QAAQmC,KAAKrB,KAC1BC,MAAOyG,EAAOxH,QAAQmC,KAAKpB,MAC3BX,MAAOoH,EAAOxH,QAAQI,UAJc,YAAC,EAMtCS,EAAQ7B,cAAe,SAAC6C,EAAO2F,GAAR,MAAoB,CAC1C1G,KAAM0G,EAAOxH,QAAQmC,KAAKrB,KAC1BC,MAAOyG,EAAOxH,QAAQmC,KAAKpB,MAC3BX,MAAOoH,EAAOxH,QAAQI,UATc,YAAC,EAWtCS,EAAQ1B,eAAgB,iBAAO,CAAE2B,KAAM,KAAMC,MAAO,KAAMX,MAAO,SAX5B,ICczB4H,GAVKC,YAAgB,CAClClG,SAAUuF,EACVxH,OAAQ6H,GACR7F,UAAW8F,GACX5F,aAAc6F,GACd5F,aAAc6F,GACd5F,UAAWwF,EACXvF,KAAM4F,KCRFG,GAAQC,YAAe,CAC3BC,QAASJ,KAGXK,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.bc0b2468.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"register/request\");\nconst registerSuccess = createAction(\"register/success\");\nconst registerError = createAction(\"register/error\");\n\nconst loginRequest = createAction(\"login/request\");\nconst loginSuccess = createAction(\"login/success\");\nconst loginError = createAction(\"login/error\");\n\nconst logOutRequest = createAction(\"logOut/request\");\nconst logOutSuccess = createAction(\"logOut/success\");\nconst logOutError = createAction(\"logOut/error\");\n\nconst fetchContactsRequest = createAction(\"fetchContacts/request\");\nconst fetchContactsSuccess = createAction(\"fetchContacts/success\");\nconst fetchContactsError = createAction(\"fetchContacts/error\");\n\nconst addContactRequest = createAction(\"addContact/request\");\nconst addContactSuccess = createAction(\"addContact/success\");\nconst addContactError = createAction(\"addContact/error\");\n\nconst removeContactRequest = createAction(\"removeContact/request\");\nconst removeContactSuccess = createAction(\"removeContact/success\");\nconst removeContactError = createAction(\"removeContact/error\");\n\nconst filter = createAction(\"FILTER\", (value) => {\n  return {\n    payload: {\n      value,\n    },\n  };\n});\n\nconst toggleMounted = createAction(\"TOGGLE_MOUNTED\", (value) => {\n  return {\n    payload: {\n      value,\n    },\n  };\n});\nconst toggleAlertVisibility = createAction(\n  \"TOGGLE_ALERT_VISIBILITY\",\n  (value) => {\n    return {\n      payload: {\n        value,\n      },\n    };\n  }\n);\n\nconst toggleAlertMessage = createAction(\"TOGGLE_ALERT_MESSAGE\", (value) => {\n  return {\n    payload: {\n      value,\n    },\n  };\n});\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n\n  loginRequest,\n  loginSuccess,\n  loginError,\n\n  logOutRequest,\n  logOutSuccess,\n  logOutError,\n\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n\n  filter,\n  toggleMounted,\n  toggleAlertVisibility,\n  toggleAlertMessage,\n};\n","import actions from \"../actions\";\nimport axios from \"axios\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst registerUser = (userData) => (dispatch) => {\n  dispatch(actions.registerRequest());\n\n  const { name, email, password } = userData;\n\n  axios\n    .post(\"/users/signup\", { name, email, password })\n    .then((response) => {\n      token.set(response.data.token);\n      dispatch(actions.registerSuccess(response.data));\n    })\n    .catch((error) => dispatch(actions.registerError(error)));\n};\n\nconst loginUser = (userData) => (dispatch) => {\n  dispatch(actions.loginRequest());\n\n  const { email, password } = userData;\n\n  axios\n    .post(\"/users/login\", { email, password })\n    .then((response) => {\n      token.set(response.data.token);\n      dispatch(actions.loginSuccess(response.data));\n    })\n    .catch((error) => dispatch(actions.loginError(error)));\n};\n\nconst logOutUser = () => (dispatch) => {\n  dispatch(actions.logOutRequest());\n\n  axios\n    .post(\"users/logout\")\n    .then((response) => {\n      token.unset();\n      dispatch(actions.logOutSuccess(response.data));\n    })\n    .catch((error) => dispatch(actions.logOutError(error)));\n};\n\nexport default {\n  registerUser,\n  loginUser,\n  logOutUser,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport authOperations from \"../redux/operations/authOperations\";\n\nfunction UserMenu({ name, onExit }) {\n  return (\n    <div>\n      Hello {name}!<button onClick={onExit}>Exit</button>\n    </div>\n  );\n}\n\nexport default connect(null, { onExit: authOperations.logOutUser })(UserMenu);\n","const getIsMounted = (state) => state.isMounted;\nconst getContacts = (state) => state.contacts;\nconst getFilter = (state) => state.filter;\nconst getAlertShown = (state) => state.isAlertShown;\nconst getAlertMessage = (state) => state.alertMessage;\nconst getLoader = (state) => state.isLoading;\nconst getUserName = (state) => state.user.name;\n\nexport default {\n  getIsMounted,\n  getContacts,\n  getFilter,\n  getAlertShown,\n  getAlertMessage,\n  getLoader,\n  getUserName,\n};\n","import React from \"react\";\nimport UserMenu from \"./UserMenu\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport selectors from \"../redux/contacts-selectors\";\n\nfunction Navbar(props) {\n  return (\n    <div className=\"navbar\">\n      <NavLink className=\"navbar__link\" to=\"/login\">\n        <span className=\"navbar__var\"> Login</span>\n      </NavLink>\n      <NavLink className=\"navbar__link\" to=\"/register\">\n        <span className=\"navbar__var\"> Register</span>\n      </NavLink>\n      <NavLink className=\"navbar__link\" to=\"/contacts\">\n        <span className=\"navbar__var\"> Contacts</span>\n      </NavLink>\n      {props.userName && <UserMenu name={props.userName} />}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  userName: selectors.getUserName(state),\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst Filter = (props) => {\n  return (\n    <div className=\"filter\">\n      <p className=\"filter__title\">Find contacts by name</p>\n      <input\n        className=\"filter__input\"\n        id=\"filter\"\n        onChange={props.filterChange}\n        value={props.filterVal}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filterChange: PropTypes.func,\n  filterVal: PropTypes.string,\n};\n\nexport default Filter;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.formSubmit(this.state);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"form__name\">\n          Name\n          <input\n            className=\"form__name--input\"\n            id=\"name\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n          />\n        </label>\n        <label className=\"form__number\">\n          Number\n          <input\n            className=\"form__number--input\"\n            id=\"number\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.number}\n          />\n        </label>\n        <button className=\"form__submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  formSubmit: PropTypes.func,\n};\n","import React, { useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport PropTypes from \"prop-types\";\n\nconst LS_KEY = \"react-hw-3\";\n\nconst ContactList = (props) => {\n  useEffect(() => {\n    localStorage.setItem(LS_KEY, JSON.stringify(props.contacts));\n  }, [props.contacts]);\n\n  return (\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\n      {props.filter === \"\"\n        ? props.contacts.map((contact) => (\n            <CSSTransition\n              key={contact.id}\n              timeout={250}\n              classNames=\"contact-list__item\"\n            >\n              <ContactListItem\n                contactId={contact.id}\n                name={contact.name}\n                number={contact.number}\n                remove={props.remove}\n              />\n            </CSSTransition>\n          ))\n        : props.contacts\n            .filter((contact) =>\n              contact.name.toLowerCase().includes(props.filter.toLowerCase())\n            )\n            .map((contact) => (\n              <CSSTransition\n                key={contact.id}\n                timeout={250}\n                classNames=\"contact-list__item\"\n              >\n                <ContactListItem\n                  key={contact.id}\n                  contactId={contact.id}\n                  name={contact.name}\n                  number={contact.number}\n                  remove={props.remove}\n                />\n              </CSSTransition>\n            ))}\n    </TransitionGroup>\n  );\n};\n\nconst ContactListItem = ({ contactId, name, number, remove }) => (\n  <li className=\"contact-list__item\">\n    <div className=\"contact-list__item--cont\">\n      <span className=\"contact-list__item--span\">{name}</span>\n      <span className=\"contact-list__item--span\">{number}</span>\n    </div>\n\n    <button\n      className=\"contact-list__remove\"\n      onClick={() => {\n        remove(contactId);\n      }}\n    >\n      {/* <div className=\"contact-list__x-left\"></div>\n      <div className=\"contact-list__x-right\"></div> */}\n    </button>\n  </li>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  remove: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\nconst Alert = ({ isShown, info }) => {\n  return (\n    <CSSTransition\n      timeout={250}\n      classNames=\"alert\"\n      in={isShown}\n      style={{ display: isShown ? \"block\" : \"none\" }}\n    >\n      <div className=\"alert\">{info}</div>\n    </CSSTransition>\n  );\n};\n\nexport default Alert;\n\nAlert.propTypes = {\n  isShown: PropTypes.bool,\n  info: PropTypes.string,\n};\n","import React from \"react\";\n\nexport default function Loader() {\n  return <div>Loading contacts...</div>;\n}\n","import actions from \"../actions\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then((response) => {\n      dispatch(actions.fetchContactsSuccess(response.data));\n    })\n    .catch((error) => dispatch(actions.fetchContactsError(error)));\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then((response) => dispatch(actions.addContactSuccess(response.data)))\n    .catch((error) => dispatch(actions.addContactError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(actions.removeContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then((response) => dispatch(actions.removeContactSuccess(id)))\n    .catch((error) => dispatch(actions.removeContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  removeContact,\n};\n","import React, { useEffect } from \"react\";\nimport Filter from \"../components/Filter\";\nimport ContactForm from \"../components/ContactForm\";\nimport ContactList from \"../components/ContactList\";\nimport Alert from \"../components/Alert\";\nimport Loader from \"../components/Loading\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport operations from \"../redux/operations/contactsOperations\";\nimport selectors from \"../redux/contacts-selectors\";\nimport actions from \"../redux/actions\";\n\nconst Contacts = (props) => {\n  const history = useHistory();\n  useEffect(() => {\n    if (!props.userName) {\n      history.replace(\"/login\");\n      return;\n    }\n\n    props.loadContacts();\n    props.toggleMounted(true);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (!props.userName) {\n      history.replace(\"/login\");\n      return;\n    }\n    // eslint-disable-next-line\n  }, [props.userName]);\n\n  const handleSubmit = ({ name, number }) => {\n    if (name.trim() === \"\" || number.trim() === \"\") {\n      handleAlert(\"Name and number must be provided.\");\n      return;\n    }\n    const check = props.contacts.find((contact) => contact.name === name);\n    check\n      ? handleAlert(\"You already have \" + name)\n      : props.onFormSubmit(name, number);\n  };\n\n  const handleAlert = (message) => {\n    props.handleAlertChange(message);\n    props.handleAlertVisibility(true);\n    setTimeout(() => {\n      props.handleAlertVisibility(false);\n    }, 3000);\n  };\n\n  return (\n    <div className=\"phonebook\">\n      <CSSTransition\n        in={props.isMounted}\n        timeout={500}\n        classNames=\"title\"\n        mountOnEnter\n      >\n        <h2 className=\"title\">Phonebook</h2>\n      </CSSTransition>\n      <ContactForm formSubmit={handleSubmit} />\n      {props.contacts.length > 1 ? (\n        <Filter filterChange={props.handleFilter} filterVal={props.filter} />\n      ) : null}\n\n      {props.isLoading && <Loader />}\n      <ContactList\n        filter={props.filter}\n        contacts={props.contacts}\n        remove={props.removeContact}\n      />\n      <Alert isShown={props.isAlertShown} info={props.alertMessage} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isMounted: selectors.getIsMounted(state),\n  contacts: selectors.getContacts(state),\n  filter: selectors.getFilter(state),\n  isAlertShown: selectors.getAlertShown(state),\n  alertMessage: selectors.getAlertMessage(state),\n  isLoading: selectors.getLoader(state),\n  userName: selectors.getUserName(state),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFormSubmit: (name, number) =>\n      dispatch(operations.addContact({ name, number })),\n    removeContact: (id) => dispatch(operations.removeContact(id)),\n    toggleMounted: (value) => dispatch(actions.toggleMounted(value)),\n    handleFilter: (e) => dispatch(actions.filter(e.target.value)),\n    handleAlertChange: (message) =>\n      dispatch(actions.toggleAlertMessage(message)),\n    handleAlertVisibility: (value) =>\n      dispatch(actions.toggleAlertVisibility(value)),\n    loadContacts: () => dispatch(operations.fetchContacts()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport authOperations from \"../redux/operations/authOperations\";\n\nfunction RegisterPage(props) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name, email, password);\n    props.onRegister({ name, email, password });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Login:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        ></input>\n      </label>\n      <label>\n        Email:\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        ></input>\n      </label>\n      <label>\n        Password:\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        ></input>\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRegister: (cred) => dispatch(authOperations.registerUser(cred)),\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport authOperations from \"../redux/operations/authOperations\";\n\nfunction LoginPage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onLogin({ email, password });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Email:\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        ></input>\n      </label>\n      <label>\n        Password:\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        ></input>\n      </label>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogin: (cred) => dispatch(authOperations.loginUser(cred)),\n});\n\nexport default connect(null, mapDispatchToProps)(LoginPage);\n","import React from \"react\";\n\nimport NavBar from \"./components/NavBar\";\n\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Contacts from \"./screens/ContactsPage\";\nimport RegisterPage from \"./screens/RegisterPage\";\nimport LoginPage from \"./screens/LoginPage\";\n\nimport \"./app.scss\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar />\n        <Switch>\n          <Route path=\"/contacts\">\n            <Contacts />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"../actions\";\n\nexport const contactReducer = createReducer([], {\n  [actions.fetchContactsSuccess]: (state, action) => action.payload,\n\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\n\n  [actions.removeContactSuccess]: (state, action) =>\n    state.filter((el) => el.id !== action.payload),\n});\n\nexport const loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n});\n","import actions from \"../actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const filterReducer = createReducer(\"\", {\n  [actions.filter]: (state, action) => action.payload.value,\n});\n","import actions from \"../actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const mountedReducer = createReducer(false, {\n  [actions.toggleMounted]: (state, action) => action.payload.value,\n});\n","import actions from \"../actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const alertShownReducer = createReducer(false, {\n  [actions.toggleAlertVisibility]: (state, action) => action.payload.value,\n});\n","import actions from \"../actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const alertMessageReducer = createReducer(\"\", {\n  [actions.toggleAlertMessage]: (state, action) => action.payload.value,\n});\n","import actions from \"../actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst initialState = { name: null, email: null, token: null };\n\nexport const authReducer = createReducer(initialState, {\n  [actions.registerSuccess]: (state, action) => ({\n    name: action.payload.user.name,\n    email: action.payload.user.email,\n    token: action.payload.token,\n  }),\n  [actions.loginSuccess]: (state, action) => ({\n    name: action.payload.user.name,\n    email: action.payload.user.email,\n    token: action.payload.token,\n  }),\n  [actions.logOutSuccess]: () => ({ name: null, email: null, token: null }),\n});\n","import { combineReducers } from \"redux\";\n\nimport { contactReducer, loading } from \"./contactReducer\";\nimport { filterReducer } from \"./filterReducer\";\nimport { mountedReducer } from \"./mountedReducer\";\nimport { alertShownReducer } from \"./alertShownReducer\";\nimport { alertMessageReducer } from \"./alertMessageReducer\";\nimport { authReducer } from \"./authReducers\";\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n  isMounted: mountedReducer,\n  isAlertShown: alertShownReducer,\n  alertMessage: alertMessageReducer,\n  isLoading: loading,\n  user: authReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}